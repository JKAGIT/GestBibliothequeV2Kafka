@page "/details-categories/{id:guid}"
@using CommonLib.GestBibliotheque.Utilitaires
@using GestBibliotheque.Blazor.Models
@inject HttpClient Http
@inject NavigationManager Navigation


<div class="container mt-4">
    <h3>Détails de la catégorie</h3>

    @if (!string.IsNullOrEmpty(Message))
    {
        <div class="alert @(Success ? "alert-success" : "alert-danger")">@Message</div>
    }

    @if (categorie == null)
    {
        <LoadingSpinner />
    }
    else
    {
        <div class="mb-3">
            <p><strong>Code :</strong> @categorie.Code</p>
        </div>
        <div class="mb-3">
            <p><strong>Libellé :</strong> @categorie.Libelle</p>
        </div>


        <div class="mb-3">
            <h5>Livres Associés à cette Catégorie</h5>
            <table class="table table-bordered">
                <thead class="thead-dark">
                    <tr>
                        <th>Titre</th>
                        <th>Auteur</th>
                        <th>Stock</th>
                        <th>Disponibilité</th>
                    </tr>
                </thead>
                <tbody>
                    @if (categorie.Livres != null && categorie.Livres.Any())
                    {
                        @foreach (var livre in categorie.Livres)
                        {
                            <tr>
                                <td>@livre.Titre</td>
                                <td>@livre.Auteur</td>
                                <td>@livre.Stock</td>
                                <td>@(livre.EstDisponible ? "Oui" : "Non")</td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="4" class="text-center">Aucun livre associé à cette catégorie</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="mt-3">
            <button class="btn btn-secondary" @onclick="RetourListe">Retour</button>
        </div>
    }
</div>

@code {
    private CategorieDto? categorie;
    private string? Message;
    private bool Success;

    [Parameter]
    public Guid Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            categorie = await Http.GetFromJsonAsync<CategorieDto>($"/api-bibliotheque/categorie/categorieParId/{Id}");
            Success = true;
        }
        catch (HttpRequestException httpEx)
        {
            Console.WriteLine($"Erreur HTTP : {httpEx.Message}");
            Message = GestionErreurs.GererErreur(httpEx);
            Success = false;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erreur générale : {ex.Message}");
            Message = GestionErreurs.GererErreur(ex);
            Success = false;
        }
    }
    private void RetourListe()
    {
        Navigation.NavigateTo("/categories");
    }
}