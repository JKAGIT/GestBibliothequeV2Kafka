// <auto-generated />
using System;
using GestionDesLivres.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionDesLivres.Infrastructure.Migrations
{
    [DbContext(typeof(GestBibliothequeContext))]
    partial class GestBibliothequeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestionDesLivres.Domain.Entities.Categorie", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("ID");

                    b.ToTable("Categorie");
                });

            modelBuilder.Entity("GestionDesLivres.Domain.Entities.Emprunt", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRetourPrevue")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EstRendu")
                        .HasColumnType("bit");

                    b.Property<Guid>("IDLivre")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IDReservation")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDUsager")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("IDLivre");

                    b.HasIndex("IDReservation")
                        .IsUnique()
                        .HasFilter("[IDReservation] IS NOT NULL");

                    b.HasIndex("IDUsager");

                    b.ToTable("Emprunt");
                });

            modelBuilder.Entity("GestionDesLivres.Domain.Entities.Livre", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Auteur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IDCategorie")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("IDCategorie");

                    b.ToTable("Livre");
                });

            modelBuilder.Entity("GestionDesLivres.Domain.Entities.Reservation", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Annuler")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRetourEstimee")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IDLivre")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDUsager")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("IDLivre");

                    b.HasIndex("IDUsager");

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("GestionDesLivres.Domain.Entities.Retour", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRetour")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IDEmprunt")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("IDEmprunt")
                        .IsUnique();

                    b.ToTable("Retour");
                });

            modelBuilder.Entity("GestionDesLivres.Domain.Entities.Usager", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Courriel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Prenoms")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("ID");

                    b.ToTable("Usager");
                });

            modelBuilder.Entity("GestionDesLivres.Domain.Entities.Utilisateur", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Courriel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Prenoms")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("ID");

                    b.ToTable("Utilisateur");
                });

            modelBuilder.Entity("GestionDesLivres.Domain.Entities.Emprunt", b =>
                {
                    b.HasOne("GestionDesLivres.Domain.Entities.Livre", "Livre")
                        .WithMany("Emprunts")
                        .HasForeignKey("IDLivre")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GestionDesLivres.Domain.Entities.Reservation", "Reservation")
                        .WithOne("Emprunt")
                        .HasForeignKey("GestionDesLivres.Domain.Entities.Emprunt", "IDReservation")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GestionDesLivres.Domain.Entities.Usager", "Usager")
                        .WithMany("Emprunts")
                        .HasForeignKey("IDUsager")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Livre");

                    b.Navigation("Reservation");

                    b.Navigation("Usager");
                });

            modelBuilder.Entity("GestionDesLivres.Domain.Entities.Livre", b =>
                {
                    b.HasOne("GestionDesLivres.Domain.Entities.Categorie", "Categorie")
                        .WithMany("Livres")
                        .HasForeignKey("IDCategorie")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categorie");
                });

            modelBuilder.Entity("GestionDesLivres.Domain.Entities.Reservation", b =>
                {
                    b.HasOne("GestionDesLivres.Domain.Entities.Livre", "Livre")
                        .WithMany("Reservations")
                        .HasForeignKey("IDLivre")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GestionDesLivres.Domain.Entities.Usager", "Usager")
                        .WithMany("Reservations")
                        .HasForeignKey("IDUsager")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Livre");

                    b.Navigation("Usager");
                });

            modelBuilder.Entity("GestionDesLivres.Domain.Entities.Retour", b =>
                {
                    b.HasOne("GestionDesLivres.Domain.Entities.Emprunt", "Emprunt")
                        .WithOne("Retours")
                        .HasForeignKey("GestionDesLivres.Domain.Entities.Retour", "IDEmprunt")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Emprunt");
                });

            modelBuilder.Entity("GestionDesLivres.Domain.Entities.Categorie", b =>
                {
                    b.Navigation("Livres");
                });

            modelBuilder.Entity("GestionDesLivres.Domain.Entities.Emprunt", b =>
                {
                    b.Navigation("Retours");
                });

            modelBuilder.Entity("GestionDesLivres.Domain.Entities.Livre", b =>
                {
                    b.Navigation("Emprunts");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("GestionDesLivres.Domain.Entities.Reservation", b =>
                {
                    b.Navigation("Emprunt");
                });

            modelBuilder.Entity("GestionDesLivres.Domain.Entities.Usager", b =>
                {
                    b.Navigation("Emprunts");

                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
